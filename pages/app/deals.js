import Head from 'next/head'
import Image from 'next/image'
import {useRouter} from 'next/router';
import styles from '../../styles/Home.module.css'
import { useState, useEffect } from 'react'
import AppContainer from '../../components/AppContainer';
import DealsTable from '../../components/DealsTable';
import { currentDomain } from '../../const';
import FlowLoader from '../../components/FlowLoader';
import Footer from '../../components/FruitiionFooter';
import isScreenMobile from '../../functions/isScreenMobile';

export default function Offerings() {
  const router = useRouter()

  const [deals, setDeals] = useState([])
  const [isLoading, setIsLoading] = useState(false)

  const initializeDeals = async () => {
    setIsLoading(true)
    const dealsResponse = await fetch(`${currentDomain}/api/getDeals`)
    const dealsData = await dealsResponse.json()
    if (dealsData.deals) {
      setDeals(dealsData.deals)
    }
    setIsLoading(false)
  }

  let filterTimeOut;
  const search = (term) => {
    clearTimeout(filterTimeOut)

    filterTimeOut = setTimeout( async () => {
      const myDealsSearchResponse = await fetch(`${currentDomain}/api/searchMyDeals`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          search: term,
        })
      })
      const myDealsSearchData = await myDealsSearchResponse.json()
      if (myDealsSearchData.deals) {
        setDeals(myDealsSearchData.deals);
      }
    }, 750)
  }

  useEffect(() => {
    const handleResize = () => {
      if (isScreenMobile(window)) {
        router.push('/mobileMessage')
      }
    }
    window.addEventListener("resize", handleResize)
    handleResize()
    initializeDeals()
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Fruitiion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fruitiionIcon.svg" />
      </Head>
      <AppContainer
        userType='sponsor'
        activeSection='deals'
        secondRowContnet={
            <>
            <div className={styles.secondRowInputContainer}>
                <div className={styles.secondRowSearchContainer}>
                    <Image className={styles.searchIcon} alt='search Icon' src='/searchIcon.svg' height={35} width={35} />
                    <input className={styles.secondRowSearch} placeholder='Search' onChange={(event) => search(event.target.value)}/>
                </div>
            </div>
            <div className={styles.secondRowComponentsContainer}>
                <button className={styles.adminControlButton} onClick={() => router.push('/app/newDeal')}>Create Deal</button>
            </div>
            </>
        }
        appContent={
            <>
            <DealsTable items={deals} />
            </>
        }
      />
    
      {
        isLoading ?
        <FlowLoader />:
        null
      }
      <Footer />
    </div>
  )
}
