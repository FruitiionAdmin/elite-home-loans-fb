import Head from 'next/head'
import Image from 'next/image'
import {useRouter} from 'next/router';
import styles from '../../styles/Home.module.css'
import { useState, useEffect, use } from 'react'
import AppContainer from '../../components/AppContainer';
import FlowLoader from '../../components/FlowLoader';
import { currentDomain } from '../../const';
import Footer from '../../components/FruitiionFooter';
import isScreenMobile from '../../functions/isScreenMobile';

export default function Profile() {
  const router = useRouter()

  const [userType, setUserType] = useState("guest")
  const [isLoading, setIsLoading] = useState(false)
  const [user, setUser] = useState()
  const [assetsUnderManagement, setAssetsUnderManagment] = useState("$0")
  const [totalRaised, setTotalRaised] = useState("$0")
  const [invested, setInvested] = useState("$0")


  const initializeProfile = async () => {
    setIsLoading(true)

    const initializeProfileResponse = await fetch(`${currentDomain}/api/initializeProfile`)
    const initializeProfileData = await initializeProfileResponse.json()

    if (initializeProfileData.result == "success" ) {
      const { userType, user, assetsUnderManagement, totalRaised, invested} = initializeProfileData
      setUserType(userType)
      console.log(user)
      setUser(user)
      if (userType == "sponsor") {
        setAssetsUnderManagment(assetsUnderManagement)
        setTotalRaised(totalRaised)
      }

      if (userType == "investor") {
        setInvested(invested)
      }
    } else {
      console.log(initializeProfileData)
    }

    setIsLoading(false)
  }

  useEffect(() => {
    const handleResize = () => {
      if (isScreenMobile(window)) {
        router.push('/mobileMessage')
      }
    }
    window.addEventListener("resize", handleResize)
    handleResize()
    initializeProfile()
  }, [])
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Fruitiion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fruitiionIcon.svg" />
      </Head>
      <AppContainer
      userType={userType}
        activeSection='profile'
        secondRowContnet={
            <>
              <div className={styles.secondAppSpacer}/>
            </>
        }
        appContent={
            <>
            <div className={styles.walletContainer}>
              <div className={styles.walletRowContainer}>
                <div className={styles.statsContainer}>
                  <div className={styles.statsRow}>
                    <a className={styles.statsLabel}>Name:</a>
                    <a className={styles.statsMetric}>{user ? `${user.firstName} ${user.middleInitial} ${user.lastName}` : null}</a>
                  </div>
                  <div className={styles.statsRow}>
                    <a className={styles.statsLabel}>Email:</a>
                    <a className={styles.statsMetric}>{user ? user.email : null}</a>
                  </div>
                  <div className={styles.statsRow}>
                    <a className={styles.statsLabel}>Phone Number:</a>
                    <a className={styles.statsMetric}>{user ? user.phoneNumber : null}</a>
                  </div>
                </div>
              </div>
              
                {
                  userType == "sponsor" ?
                    <div className={styles.sponsorAboutcontainer}>
                      <Image src={user.profilePic} height={300} width={300}/>
                      <p className={styles.sponsorAbout}>{user.about}</p>
                    </div>:
                    <div className={styles.walletRowContainer}>
                      <div className={styles.statsContainer}>
                          <a className={styles.statsTitle}>Investor Stats</a>
                          <div className={styles.statsRow}>
                              <a className={styles.statsLabel}>Total Invested:</a>
                              <a className={styles.statsMetric}>{invested}</a>
                          </div>
                      </div>
                    </div>
                }                
            </div>
            </>
        }
      />
      {
        isLoading ?
        <FlowLoader />:
        null
      }
      
      <Footer />
    </div>
  )
}